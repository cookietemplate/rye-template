[project]
name = "rye-template"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "Aoi", email = "82735346+ryan-minato@users.noreply.github.com" }
]
dependencies = []
readme = "README.md"
requires-python = ">= 3.10"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.0.2",
    "pre-commit>=3.6.2",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "commitizen>=3.18.0",
    "pyright>=1.1.352",
    "isort>=5.13.2",
    "mkdocs-material>=9.5.18",
    "pytest-benchmark>=4.0.0",
]

[tool.rye.scripts]
prepare = "pre-commit install"
type-check = "pyright"
sort = "isort ."
doc = "mkdocs serve"
ci_test = "rye test"
ci_lint = "rye lint --fix"
ci_build_doc = "mkdocs build"
ci = { chain = ["sort", "ci_lint", "type-check", "ci_test", "ci_build_doc"] }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/rye_template"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "scripts",
]
defineConstant = { DEBUG = true }
venvPath = "."
venv = ".venv"

reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateImportUsage = false

pythonVersion = "3.11"
pythonPlatform = "Linux"

[tool.z]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Allow boolean parameters in function definitions, like `def foo(bar=True)`
    "FBT002",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Ignore single line string
    "ISC001"
]
unfixable = [
    # Don't touch unused imports
    "F401",
]
exclude = [
    "**/*_pb2.py",
    "**/*_pb2.pyi",
    "**/*_pb2_grpc.py",
]

[tool.ruff.lint.isort]
known-first-party = ["rye_template"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]

[tool.isort]
known_first_party = ["rye_template"]
